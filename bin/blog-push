#!/usr/bin/env node
// 高亮打印
const chalk = require('chalk')

const program = require('commander')

const events = require('events')

const shell = require('shelljs')

const path = require('path')
// 文件是否存在
const exists = require('fs').existsSync

const { copyDir } = require('../lib/file')

const { ask } = require('../lib/ask')

// 删除文件夹
const rm = require('rimraf').sync

const eventEmitter = new events.EventEmitter()

console.log(__dirname, '__dirname')

// 命令在哪个目录下执行的
const cwdPath = process.cwd()

// 配置commander使用方法
program
  .usage('<github-name> [project-name]')
  .option('-g, --github', 'use git init')
  .option('-p, --path', 'project base path')

/**
 * Help.
*/

program.on('--help', () => {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # blog push -g artadmire -p ./public'))
  console.log()
  console.log()
})

function help () {
  program.parse(process.argv)
  console.log(program.args, 'args')
  if (program.args.length < 0) {
    program.help()
  }
}
help()

const gitHubUseName = program.args[0]

const basePath = program.args[1] || './'

const distPath = path.join(cwdPath, basePath)

const blogCliGitPath = path.join(__dirname, '../git/.git')

const localGitPath = path.join(cwdPath, basePath, '.git')

let answerObj = null

console.log('distPath', distPath)
console.log('blogCliGitPath', blogCliGitPath)
console.log('localGitPath', localGitPath)

if (!shell.which('git')) {
  shell.echo('Sorry, this script requires git')
  shell.exit(1)
}

if (exists(distPath)) {
  console.log('distPath exist ')
  ask().then((answers) => {
    answerObj = answers
    run()
  })
  .catch((e) => {
    console.log(e)
  })
} else {
  console.log(chalk.red(`distPath not exist`))
  shell.exit(1)
}

process.on('exit', () => {
  console.log('end')
})

function run () {
  shell.cd(basePath)

  if (exists(localGitPath)) {
    rm(blogCliGitPath)
    copyDir(localGitPath, blogCliGitPath, () => eventEmitter.emit('copyDirLToC'))
  } else {
    checkGitPath()
  }
}

function next () {
  const { commitMsg } = answerObj
  shell.exec(`git add .`)
  shell.exec(`git commit -m "${commitMsg}"`)
  shell.exec(`git push https://github.com/${gitHubUseName}/${gitHubUseName}.github.io.git.git master`)
  rm(blogCliGitPath)
  copyDir(localGitPath, blogCliGitPath, () => {
    shell.exit(1)
  })
}

function checkGitPath () {
   // node_modules不存在仓库 一般是第一次使用
  if (!exists(blogCliGitPath)) {
    shell.exec(`git init`)
    next()
  } else {
    console.log('copy blogCliGitPath to localGitPath')
    copyDir(blogCliGitPath, localGitPath, () => eventEmitter.emit('copyDirCToL'))
  }
}

// local-cli
eventEmitter.on('copyDirLToC', () => {
  next()
})

// cli-local
eventEmitter.on('copyDirCToL', () => {
  next()
})
